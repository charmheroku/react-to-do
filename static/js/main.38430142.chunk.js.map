{"version":3,"sources":["atoms.tsx","components/CreateCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","customCategoriesState","JSON","parse","localStorage","getItem","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","ToDoBtn","styled","button","ToDoForm","form","CreateCategory","useForm","register","handleSubmit","setValue","errors","formState","useRecoilState","customCategories","setCustomCategories","setCategory","useSetRecoilState","useEffect","setItem","stringify","onSubmit","customCategory","oldCategories","required","minLength","maxLength","placeholder","type","message","CreateToDo","setToDos","useRecoilValue","oldToDos","text","id","Date","now","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","map","idx","oldToDo","console","log","ToDoList","value","onInput","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","Helmet","rel","href","integrity","crossOrigin","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.38430142.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const customCategoriesState = atom<string[]>({\n  key: \"customCategories\",\n  default: JSON.parse(localStorage.getItem(\"CATEGORIES_KEY\") || \"[]\"),\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: JSON.parse(localStorage.getItem(\"toDos\") || \"[]\"),\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { categoryState, customCategoriesState } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IForm {\r\n  customCategory: string;\r\n}\r\n\r\nconst ToDoBtn = styled.button``;\r\n\r\nconst ToDoForm = styled.form`\r\n  \r\n  }\r\n`;\r\n\r\nfunction CreateCategory() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<IForm>();\r\n  const [customCategories, setCustomCategories] = useRecoilState(\r\n    customCategoriesState\r\n  );\r\n  const setCategory = useSetRecoilState(categoryState);\r\n\r\n  const handleValid = ({ customCategory }: IForm) => {\r\n    setValue(\"customCategory\", \"\");\r\n    setCategory(customCategory as any);\r\n    setCustomCategories((oldCategories) => {\r\n      return [...oldCategories, customCategory];\r\n    });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"CATEGORIES_KEY\", JSON.stringify(customCategories));\r\n  }, [customCategories]);\r\n\r\n  return (\r\n    <ToDoForm onSubmit={handleSubmit(handleValid)}>\r\n      <div>\r\n        <input\r\n          {...register(\"customCategory\", {\r\n            required: \"The name cannot exceed 8 letters\",\r\n            minLength: 3,\r\n            maxLength: 8,\r\n          })}\r\n          placeholder=\"Make Your Category\"\r\n          type=\"text\"\r\n        />\r\n        <ToDoBtn>Add category</ToDoBtn>\r\n      </div>\r\n      <span>{errors.customCategory?.message}</span>\r\n    </ToDoForm>\r\n  );\r\n}\r\n\r\nexport default CreateCategory;\r\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { Categories, customCategoriesState, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const customCategories = useRecoilValue(customCategoriesState);\n  const onDelete = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setToDos((oldToDos) => {\n        const oldToDo = oldToDos.filter((toDo) => toDo.id !== id)\n        console.log(oldToDo);\n        return [...oldToDo];\n    }\n    )\n}\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n      {customCategories !== [] &&\n        customCategories.map((customCategory, idx) => {\n          if (customCategory !== category) {\n            return (\n              <button name={customCategory} key={idx} onClick={onClick}>\n                {customCategory}\n              </button>\n            );\n          }\n          return null\n        })}\n      <button key={id} onClick={onDelete}>\n        üóëÔ∏è\n      </button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Categories, categoryState, customCategoriesState, toDoSelector, toDoState } from \"../atoms\";\nimport CreateCategory from \"./CreateCategory\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDo = useRecoilValue(toDoState);\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const customCategories = useRecoilValue(\n    customCategoriesState\n  );\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n\n\n  useEffect(() => {\n    localStorage.setItem(\"toDos\", JSON.stringify(toDo));\n  }, [toDo]);\n  return (\n    <div>\n      <h1>To Dos</h1>\n     \n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n        {customCategories !== [] &&\n          customCategories.map((customCategory, idx) => (\n            <option value={customCategory} key={idx}>\n              {customCategory}\n            </option>\n          ))}\n      </select>\n      <CreateCategory/>\n      <hr/>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { Helmet } from \"react-helmet\";\nimport { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <title>To Do</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\"\n          integrity=\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\"\n          crossOrigin=\"anonymous\"\n        ></link>\n      </Helmet>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}